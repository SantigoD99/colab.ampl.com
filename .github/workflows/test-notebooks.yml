name: Discover and Test Notebooks

on: [push]

jobs:
  discover-notebook-dirs:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.set-dirs.outputs.dirs }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Find directories with notebooks
      id: set-dirs
      run: |
        dirs=$(find . -type f -name "*.ipynb" -exec dirname {} \; | sort -u | jq -R -s -c 'split("\n")[:-1]')
        echo "Found notebook dirs: $dirs"
        echo "dirs=$dirs" >> $GITHUB_OUTPUT

  test-notebooks:
    needs: discover-notebook-dirs
    strategy:
      matrix:
        dir: ${{ fromJson(needs.discover-notebook-dirs.outputs.dirs) }}
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      env:
        AMPLKEY_UUID: ${{ secrets.AMPLKEY_UUID }}
      run: |
        python -m pip install --upgrade pip
        pip install nbval pytest
        pip install amplpy --pre
        python -m amplpy.modules install base
        python -m amplpy.modules activate $AMPLKEY_UUID

    - name: Test notebooks in ${{ matrix.dir }}
      run: |
        echo "Testing notebooks in directory: ${{ matrix.dir }}"

        # Regex pattern to match any skip keywords
        SKIP_REGEX="authenticate_user|gspread\.authorize|gmaps\.configure|powerbiclient"

        # Find all notebooks in the current matrix dir
        NOTEBOOKS=$(find "${{ matrix.dir }}" -name "*.ipynb")

        # Filter out notebooks matching the skip pattern
        TESTABLE_NOTEBOOKS=""
        for nb in $NOTEBOOKS; do
          if grep -qiE "$SKIP_REGEX" "$nb"; then
            echo "⏩ Skipping $nb (matched skip regex)"
          else
            TESTABLE_NOTEBOOKS="$TESTABLE_NOTEBOOKS $nb"
          fi
        done

        if [ -z "$TESTABLE_NOTEBOOKS" ]; then
          echo "✅ No notebooks to test in ${{ matrix.dir }} after filtering."
        else
          echo "▶️ Running tests on:"
          echo "$TESTABLE_NOTEBOOKS"
          pytest --nbval-lax $TESTABLE_NOTEBOOKS
        fi